// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.13.0
// source: user/user.service.proto

package user

import (
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	empty "github.com/liov/tiga/protobuf/utils/empty"
	oauth "github.com/liov/tiga/protobuf/utils/oauth"
	_ "github.com/liov/tiga/protobuf/utils/proto/gogo"
	_ "github.com/liov/tiga/protobuf/utils/proto/patch"
	request "github.com/liov/tiga/protobuf/utils/request"
	response "github.com/liov/tiga/protobuf/utils/response"
	_ "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 注册验证请求
type SingUpVerifyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 邮箱
	Mail string `protobuf:"bytes,6,opt,name=mail,proto3" json:"mail,omitempty" validate:"omitempty,email" annotation:"邮箱"`
	// 手机号
	Phone string `protobuf:"bytes,7,opt,name=phone,proto3" json:"phone,omitempty" validate:"omitempty,phone" annotation:"手机号"`
}

func (x *SingUpVerifyReq) Reset() {
	*x = SingUpVerifyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_user_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SingUpVerifyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SingUpVerifyReq) ProtoMessage() {}

func (x *SingUpVerifyReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_user_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SingUpVerifyReq.ProtoReflect.Descriptor instead.
func (*SingUpVerifyReq) Descriptor() ([]byte, []int) {
	return file_user_user_service_proto_rawDescGZIP(), []int{0}
}

func (x *SingUpVerifyReq) GetMail() string {
	if x != nil {
		return x.Mail
	}
	return ""
}

func (x *SingUpVerifyReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

type SignupReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 密码
	Password string `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty" validate:"required,gte=6,lte=15" annotation:"密码"`
	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty" validate:"required,gte=3,lte=10" annotation:"昵称"`
	Gender   Gender `protobuf:"varint,3,opt,name=gender,proto3,enum=user.Gender" json:"gender,omitempty" validate:"required" annotation:"性别"`
	// 邮箱
	Mail string `protobuf:"bytes,6,opt,name=mail,proto3" json:"mail,omitempty" validate:"omitempty,email" annotation:"邮箱"`
	// 手机号
	Phone string `protobuf:"bytes,7,opt,name=phone,proto3" json:"phone,omitempty" validate:"omitempty,phone" annotation:"手机号"`
	// 验证码
	VCode string `protobuf:"bytes,8,opt,name=vCode,proto3" json:"vCode,omitempty" validate:"required" annotation:"验证码"`
}

func (x *SignupReq) Reset() {
	*x = SignupReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_user_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignupReq) ProtoMessage() {}

func (x *SignupReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_user_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignupReq.ProtoReflect.Descriptor instead.
func (*SignupReq) Descriptor() ([]byte, []int) {
	return file_user_user_service_proto_rawDescGZIP(), []int{1}
}

func (x *SignupReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *SignupReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SignupReq) GetGender() Gender {
	if x != nil {
		return x.Gender
	}
	return GenderPlaceholder
}

func (x *SignupReq) GetMail() string {
	if x != nil {
		return x.Mail
	}
	return ""
}

func (x *SignupReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *SignupReq) GetVCode() string {
	if x != nil {
		return x.VCode
	}
	return ""
}

type ActiveReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Secret string `protobuf:"bytes,2,opt,name=secret,proto3" json:"secret,omitempty"`
}

func (x *ActiveReq) Reset() {
	*x = ActiveReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_user_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActiveReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActiveReq) ProtoMessage() {}

func (x *ActiveReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_user_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActiveReq.ProtoReflect.Descriptor instead.
func (*ActiveReq) Descriptor() ([]byte, []int) {
	return file_user_user_service_proto_rawDescGZIP(), []int{2}
}

func (x *ActiveReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ActiveReq) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

type EditReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      uint64               `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Details *EditReq_EditDetails `protobuf:"bytes,2,opt,name=details,proto3" json:"details,omitempty" gorm:"embedded"`
}

func (x *EditReq) Reset() {
	*x = EditReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_user_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditReq) ProtoMessage() {}

func (x *EditReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_user_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditReq.ProtoReflect.Descriptor instead.
func (*EditReq) Descriptor() ([]byte, []int) {
	return file_user_user_service_proto_rawDescGZIP(), []int{3}
}

func (x *EditReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *EditReq) GetDetails() *EditReq_EditDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

// 登录请求
type LoginReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Input    string `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty" validate:"required,gte=6,lte=15" annotation:"密码"`
	VCode    string `protobuf:"bytes,3,opt,name=vCode,proto3" json:"vCode,omitempty"`
}

func (x *LoginReq) Reset() {
	*x = LoginReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_user_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginReq) ProtoMessage() {}

func (x *LoginReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_user_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginReq.ProtoReflect.Descriptor instead.
func (*LoginReq) Descriptor() ([]byte, []int) {
	return file_user_user_service_proto_rawDescGZIP(), []int{4}
}

func (x *LoginReq) GetInput() string {
	if x != nil {
		return x.Input
	}
	return ""
}

func (x *LoginReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *LoginReq) GetVCode() string {
	if x != nil {
		return x.VCode
	}
	return ""
}

// 登录返回
type LoginRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User  *UserBaseInfo `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Token string        `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *LoginRep) Reset() {
	*x = LoginRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_user_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRep) ProtoMessage() {}

func (x *LoginRep) ProtoReflect() protoreflect.Message {
	mi := &file_user_user_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRep.ProtoReflect.Descriptor instead.
func (*LoginRep) Descriptor() ([]byte, []int) {
	return file_user_user_service_proto_rawDescGZIP(), []int{5}
}

func (x *LoginRep) GetUser() *UserBaseInfo {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *LoginRep) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// 重置密码请求
type ResetPasswordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Secret   string `protobuf:"bytes,2,opt,name=secret,proto3" json:"secret,omitempty"`
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *ResetPasswordReq) Reset() {
	*x = ResetPasswordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_user_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetPasswordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetPasswordReq) ProtoMessage() {}

func (x *ResetPasswordReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_user_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetPasswordReq.ProtoReflect.Descriptor instead.
func (*ResetPasswordReq) Descriptor() ([]byte, []int) {
	return file_user_user_service_proto_rawDescGZIP(), []int{6}
}

func (x *ResetPasswordReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ResetPasswordReq) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

func (x *ResetPasswordReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type ActionLogListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime string `protobuf:"bytes,1,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime   string `protobuf:"bytes,2,opt,name=endTime,proto3" json:"endTime,omitempty"`
}

func (x *ActionLogListReq) Reset() {
	*x = ActionLogListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_user_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionLogListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionLogListReq) ProtoMessage() {}

func (x *ActionLogListReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_user_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionLogListReq.ProtoReflect.Descriptor instead.
func (*ActionLogListReq) Descriptor() ([]byte, []int) {
	return file_user_user_service_proto_rawDescGZIP(), []int{7}
}

func (x *ActionLogListReq) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *ActionLogListReq) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

type ActionLogListRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count uint32           `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	List  []*UserActionLog `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ActionLogListRep) Reset() {
	*x = ActionLogListRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_user_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionLogListRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionLogListRep) ProtoMessage() {}

func (x *ActionLogListRep) ProtoReflect() protoreflect.Message {
	mi := &file_user_user_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionLogListRep.ProtoReflect.Descriptor instead.
func (*ActionLogListRep) Descriptor() ([]byte, []int) {
	return file_user_user_service_proto_rawDescGZIP(), []int{8}
}

func (x *ActionLogListRep) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ActionLogListRep) GetList() []*UserActionLog {
	if x != nil {
		return x.List
	}
	return nil
}

type SendVerifyCodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 邮箱
	Mail string `protobuf:"bytes,6,opt,name=mail,proto3" json:"mail,omitempty" validate:"omitempty,email" annotation:"邮箱"`
	// 手机号
	Phone string `protobuf:"bytes,7,opt,name=phone,proto3" json:"phone,omitempty" validate:"omitempty,phone" annotation:"手机号"`
	Type  Action `protobuf:"varint,2,opt,name=type,proto3,enum=user.Action" json:"type,omitempty" annotation:"操作类型"`
}

func (x *SendVerifyCodeReq) Reset() {
	*x = SendVerifyCodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_user_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendVerifyCodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendVerifyCodeReq) ProtoMessage() {}

func (x *SendVerifyCodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_user_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendVerifyCodeReq.ProtoReflect.Descriptor instead.
func (*SendVerifyCodeReq) Descriptor() ([]byte, []int) {
	return file_user_user_service_proto_rawDescGZIP(), []int{9}
}

func (x *SendVerifyCodeReq) GetMail() string {
	if x != nil {
		return x.Mail
	}
	return ""
}

func (x *SendVerifyCodeReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *SendVerifyCodeReq) GetType() Action {
	if x != nil {
		return x.Type
	}
	return ActionPlaceholder
}

type BaseListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids      []uint64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	PageNo   uint32   `protobuf:"varint,2,opt,name=pageNo,proto3" json:"pageNo,omitempty"`
	PageSize uint32   `protobuf:"varint,3,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *BaseListReq) Reset() {
	*x = BaseListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_user_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseListReq) ProtoMessage() {}

func (x *BaseListReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_user_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseListReq.ProtoReflect.Descriptor instead.
func (*BaseListReq) Descriptor() ([]byte, []int) {
	return file_user_user_service_proto_rawDescGZIP(), []int{10}
}

func (x *BaseListReq) GetIds() []uint64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *BaseListReq) GetPageNo() uint32 {
	if x != nil {
		return x.PageNo
	}
	return 0
}

func (x *BaseListReq) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type BaseListRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64           `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*UserBaseInfo `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *BaseListRep) Reset() {
	*x = BaseListRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_user_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseListRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseListRep) ProtoMessage() {}

func (x *BaseListRep) ProtoReflect() protoreflect.Message {
	mi := &file_user_user_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseListRep.ProtoReflect.Descriptor instead.
func (*BaseListRep) Descriptor() ([]byte, []int) {
	return file_user_user_service_proto_rawDescGZIP(), []int{11}
}

func (x *BaseListRep) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *BaseListRep) GetList() []*UserBaseInfo {
	if x != nil {
		return x.List
	}
	return nil
}

type UserRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User   *User    `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	UerExt *UserExt `protobuf:"bytes,2,opt,name=uerExt,proto3" json:"uerExt,omitempty"`
}

func (x *UserRep) Reset() {
	*x = UserRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_user_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRep) ProtoMessage() {}

func (x *UserRep) ProtoReflect() protoreflect.Message {
	mi := &file_user_user_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRep.ProtoReflect.Descriptor instead.
func (*UserRep) Descriptor() ([]byte, []int) {
	return file_user_user_service_proto_rawDescGZIP(), []int{12}
}

func (x *UserRep) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *UserRep) GetUerExt() *UserExt {
	if x != nil {
		return x.UerExt
	}
	return nil
}

type FollowReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *FollowReq) Reset() {
	*x = FollowReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_user_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FollowReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FollowReq) ProtoMessage() {}

func (x *FollowReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_user_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FollowReq.ProtoReflect.Descriptor instead.
func (*FollowReq) Descriptor() ([]byte, []int) {
	return file_user_user_service_proto_rawDescGZIP(), []int{13}
}

func (x *FollowReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type EditReq_EditDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" validate:"gte=3,lte=10" annotation:"名字"`
	// 性别，0未填写，1男，2女
	Gender    Gender    `protobuf:"varint,8,opt,name=gender,proto3,enum=user.Gender" json:"gender,omitempty"`
	Birthday  string    `protobuf:"bytes,9,opt,name=birthday,proto3" json:"birthday,omitempty"`
	Address   string    `protobuf:"bytes,14,opt,name=address,proto3" json:"address,omitempty"`
	Intro     string    `protobuf:"bytes,10,opt,name=intro,proto3" json:"intro,omitempty"`
	Signature string    `protobuf:"bytes,11,opt,name=signature,proto3" json:"signature,omitempty"`
	AvatarUrl string    `protobuf:"bytes,12,opt,name=avatarUrl,proto3" json:"avatarUrl,omitempty"`
	CoverUrl  string    `protobuf:"bytes,13,opt,name=coverUrl,proto3" json:"coverUrl,omitempty"`
	EduExps   []*Resume `protobuf:"bytes,15,rep,name=eduExps,proto3" json:"eduExps,omitempty" gorm:"-"`
	WorkExps  []*Resume `protobuf:"bytes,16,rep,name=workExps,proto3" json:"workExps,omitempty" gorm:"-"`
}

func (x *EditReq_EditDetails) Reset() {
	*x = EditReq_EditDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_user_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditReq_EditDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditReq_EditDetails) ProtoMessage() {}

func (x *EditReq_EditDetails) ProtoReflect() protoreflect.Message {
	mi := &file_user_user_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditReq_EditDetails.ProtoReflect.Descriptor instead.
func (*EditReq_EditDetails) Descriptor() ([]byte, []int) {
	return file_user_user_service_proto_rawDescGZIP(), []int{3, 0}
}

func (x *EditReq_EditDetails) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EditReq_EditDetails) GetGender() Gender {
	if x != nil {
		return x.Gender
	}
	return GenderPlaceholder
}

func (x *EditReq_EditDetails) GetBirthday() string {
	if x != nil {
		return x.Birthday
	}
	return ""
}

func (x *EditReq_EditDetails) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *EditReq_EditDetails) GetIntro() string {
	if x != nil {
		return x.Intro
	}
	return ""
}

func (x *EditReq_EditDetails) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *EditReq_EditDetails) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

func (x *EditReq_EditDetails) GetCoverUrl() string {
	if x != nil {
		return x.CoverUrl
	}
	return ""
}

func (x *EditReq_EditDetails) GetEduExps() []*Resume {
	if x != nil {
		return x.EduExps
	}
	return nil
}

func (x *EditReq_EditDetails) GetWorkExps() []*Resume {
	if x != nil {
		return x.WorkExps
	}
	return nil
}

var File_user_user_service_proto protoreflect.FileDescriptor

var file_user_user_service_proto_rawDesc = []byte{
	0x0a, 0x17, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x75, 0x73, 0x65, 0x72, 0x1a,
	0x15, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69,
	0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x36, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x77, 0x69, 0x74, 0x6b, 0x6f, 0x77,
	0x2f, 0x67, 0x6f, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x6f, 0x72, 0x73, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x17, 0x75, 0x74, 0x69, 0x6c, 0x73, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2f,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x75, 0x74, 0x69,
	0x6c, 0x73, 0x2f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x75, 0x74, 0x69, 0x6c,
	0x73, 0x2f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x75, 0x74, 0x69, 0x6c, 0x73, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x75, 0x74, 0x69, 0x6c, 0x73, 0x2f, 0x6f, 0x61, 0x75,
	0x74, 0x68, 0x2f, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0e,
	0x70, 0x61, 0x74, 0x63, 0x68, 0x2f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf7,
	0x01, 0x0a, 0x0f, 0x53, 0x69, 0x6e, 0x67, 0x55, 0x70, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52,
	0x65, 0x71, 0x12, 0x49, 0x0a, 0x04, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x35, 0xd2, 0xb5, 0x03, 0x31, 0xa2, 0x01, 0x2e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x3a, 0x22, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2c, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x22, 0x20, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x22,
	0xe9, 0x82, 0xae, 0xe7, 0xae, 0xb1, 0x22, 0x52, 0x04, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x4e, 0x0a,
	0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x38, 0xd2, 0xb5,
	0x03, 0x34, 0xa2, 0x01, 0x31, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x3a, 0x22, 0x6f,
	0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x22, 0x20,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x22, 0xe6, 0x89, 0x8b, 0xe6,
	0x9c, 0xba, 0xe5, 0x8f, 0xb7, 0x22, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x3a, 0x49, 0x92,
	0x41, 0x46, 0x0a, 0x14, 0x2a, 0x12, 0xe6, 0xb3, 0xa8, 0xe5, 0x86, 0x8c, 0xe9, 0xaa, 0x8c, 0xe8,
	0xaf, 0x81, 0xe8, 0xaf, 0xb7, 0xe6, 0xb1, 0x82, 0x32, 0x2e, 0x7b, 0x22, 0x6d, 0x61, 0x69, 0x6c,
	0x22, 0x3a, 0x20, 0x22, 0x31, 0x32, 0x33, 0x40, 0x71, 0x71, 0x2e, 0x63, 0x6f, 0x6d, 0x22, 0x2c,
	0x20, 0x22, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x22, 0x3a, 0x20, 0x22, 0x31, 0x32, 0x33, 0x34, 0x35,
	0x36, 0x37, 0x38, 0x39, 0x30, 0x31, 0x22, 0x7d, 0x22, 0x95, 0x04, 0x0a, 0x09, 0x53, 0x69, 0x67,
	0x6e, 0x75, 0x70, 0x52, 0x65, 0x71, 0x12, 0x7d, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x61, 0xd2, 0xb5, 0x03, 0x37, 0xa2, 0x01,
	0x34, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x3a, 0x22, 0x72, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x64, 0x2c, 0x67, 0x74, 0x65, 0x3d, 0x36, 0x2c, 0x6c, 0x74, 0x65, 0x3d, 0x31, 0x35,
	0x22, 0x20, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x22, 0xe5, 0xaf,
	0x86, 0xe7, 0xa0, 0x81, 0x22, 0xe2, 0xdf, 0x1f, 0x14, 0x2a, 0x10, 0xe5, 0xaf, 0x86, 0xe7, 0xa0,
	0x81, 0xe6, 0x9c, 0x80, 0xe7, 0x9f, 0xad, 0x36, 0xe4, 0xbd, 0x8d, 0x70, 0x05, 0x92, 0x41, 0x0b,
	0x2a, 0x06, 0xe5, 0xaf, 0x86, 0xe7, 0xa0, 0x81, 0x80, 0x01, 0x06, 0x52, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x4f, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x3b, 0xd2, 0xb5, 0x03, 0x37, 0xa2, 0x01, 0x34, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x3a, 0x22, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x2c, 0x67,
	0x74, 0x65, 0x3d, 0x33, 0x2c, 0x6c, 0x74, 0x65, 0x3d, 0x31, 0x30, 0x22, 0x20, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x22, 0xe6, 0x98, 0xb5, 0xe7, 0xa7, 0xb0, 0x22,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x54, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x42, 0x2e, 0xd2, 0xb5, 0x03, 0x2a, 0xa2, 0x01, 0x27, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x3a, 0x22, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x22,
	0x20, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x22, 0xe6, 0x80, 0xa7,
	0xe5, 0x88, 0xab, 0x22, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x49, 0x0a, 0x04,
	0x6d, 0x61, 0x69, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x35, 0xd2, 0xb5, 0x03, 0x31,
	0xa2, 0x01, 0x2e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x3a, 0x22, 0x6f, 0x6d, 0x69,
	0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2c, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x20, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x22, 0xe9, 0x82, 0xae, 0xe7, 0xae, 0xb1,
	0x22, 0x52, 0x04, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x4e, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x38, 0xd2, 0xb5, 0x03, 0x34, 0xa2, 0x01, 0x31, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x3a, 0x22, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70,
	0x74, 0x79, 0x2c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x22, 0x20, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x22, 0xe6, 0x89, 0x8b, 0xe6, 0x9c, 0xba, 0xe5, 0x8f, 0xb7, 0x22,
	0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x47, 0x0a, 0x05, 0x76, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x31, 0xd2, 0xb5, 0x03, 0x2d, 0xa2, 0x01, 0x2a, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x3a, 0x22, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x64, 0x22, 0x20, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x22, 0xe9,
	0xaa, 0x8c, 0xe8, 0xaf, 0x81, 0xe7, 0xa0, 0x81, 0x22, 0x52, 0x05, 0x76, 0x43, 0x6f, 0x64, 0x65,
	0x22, 0x4d, 0x0a, 0x09, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x0b, 0x92, 0x41, 0x08, 0x2a, 0x02,
	0x49, 0x44, 0x9a, 0x02, 0x01, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x06, 0x73, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0x92, 0x41, 0x08, 0x2a,
	0x06, 0xe5, 0xaf, 0x86, 0xe9, 0x92, 0xa5, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x22,
	0x92, 0x04, 0x0a, 0x07, 0x45, 0x64, 0x69, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x0b, 0x92, 0x41, 0x08, 0x2a, 0x02, 0x49, 0x44,
	0x9a, 0x02, 0x01, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x4b, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x45, 0x64, 0x69, 0x74, 0x52, 0x65, 0x71, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x42, 0x16, 0xd2, 0xb5, 0x03, 0x12, 0xa2, 0x01, 0x0f, 0x67, 0x6f, 0x72,
	0x6d, 0x3a, 0x22, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x22, 0x52, 0x07, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x1a, 0x9c, 0x03, 0x0a, 0x0b, 0x45, 0x64, 0x69, 0x74, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x46, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x32, 0xd2, 0xb5, 0x03, 0x2e, 0xa2, 0x01, 0x2b, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x3a, 0x22, 0x67, 0x74, 0x65, 0x3d, 0x33, 0x2c, 0x6c, 0x74, 0x65, 0x3d,
	0x31, 0x30, 0x22, 0x20, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x22,
	0xe5, 0x90, 0x8d, 0xe5, 0xad, 0x97, 0x22, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2d, 0x0a,
	0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x42, 0x07, 0x92, 0x41, 0x04,
	0x9a, 0x02, 0x01, 0x03, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08,
	0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x55, 0x72, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x55, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x55, 0x72, 0x6c,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x55, 0x72, 0x6c,
	0x12, 0x37, 0x0a, 0x07, 0x65, 0x64, 0x75, 0x45, 0x78, 0x70, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x42,
	0x0f, 0xd2, 0xb5, 0x03, 0x0b, 0xa2, 0x01, 0x08, 0x67, 0x6f, 0x72, 0x6d, 0x3a, 0x22, 0x2d, 0x22,
	0x52, 0x07, 0x65, 0x64, 0x75, 0x45, 0x78, 0x70, 0x73, 0x12, 0x39, 0x0a, 0x08, 0x77, 0x6f, 0x72,
	0x6b, 0x45, 0x78, 0x70, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x42, 0x0f, 0xd2, 0xb5, 0x03, 0x0b, 0xa2,
	0x01, 0x08, 0x67, 0x6f, 0x72, 0x6d, 0x3a, 0x22, 0x2d, 0x22, 0x52, 0x08, 0x77, 0x6f, 0x72, 0x6b,
	0x45, 0x78, 0x70, 0x73, 0x22, 0xa3, 0x01, 0x0a, 0x08, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65,
	0x71, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x6b, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x4f, 0xd2, 0xb5, 0x03, 0x37, 0xa2,
	0x01, 0x34, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x3a, 0x22, 0x72, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x64, 0x2c, 0x67, 0x74, 0x65, 0x3d, 0x36, 0x2c, 0x6c, 0x74, 0x65, 0x3d, 0x31,
	0x35, 0x22, 0x20, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x22, 0xe5,
	0xaf, 0x86, 0xe7, 0xa0, 0x81, 0x22, 0xe2, 0xdf, 0x1f, 0x10, 0x2a, 0x0c, 0xe5, 0xaf, 0x86, 0xe7,
	0xa0, 0x81, 0xe9, 0x94, 0x99, 0xe8, 0xaf, 0xaf, 0x70, 0x06, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x48, 0x0a, 0x08, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x52, 0x65, 0x70, 0x12, 0x26, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x7d, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x42, 0x0b, 0x92, 0x41, 0x08, 0x2a, 0x02, 0x49, 0x44, 0x9a, 0x02, 0x01,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0x92, 0x41, 0x08, 0x2a, 0x06, 0xe5, 0xaf, 0x86, 0xe9,
	0x92, 0xa5, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x27, 0x0a, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0x92, 0x41,
	0x08, 0x2a, 0x06, 0xe5, 0xaf, 0x86, 0xe7, 0xa0, 0x81, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x22, 0x4a, 0x0a, 0x10, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0x51, 0x0a, 0x10, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x52, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x22, 0xf2, 0x01, 0x0a, 0x11, 0x53, 0x65, 0x6e, 0x64, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x79, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x12, 0x49, 0x0a, 0x04, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x35, 0xd2, 0xb5, 0x03, 0x31, 0xa2, 0x01, 0x2e, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x3a, 0x22, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70,
	0x74, 0x79, 0x2c, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x20, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x22, 0xe9, 0x82, 0xae, 0xe7, 0xae, 0xb1, 0x22, 0x52, 0x04, 0x6d,
	0x61, 0x69, 0x6c, 0x12, 0x4e, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x38, 0xd2, 0xb5, 0x03, 0x34, 0xa2, 0x01, 0x31, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x3a, 0x22, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2c, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x22, 0x20, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x3a, 0x22, 0xe6, 0x89, 0x8b, 0xe6, 0x9c, 0xba, 0xe5, 0x8f, 0xb7, 0x22, 0x52, 0x05, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x12, 0x42, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x20, 0xd2, 0xb5, 0x03, 0x1c, 0xa2, 0x01, 0x19, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x3a, 0x22, 0xe6, 0x93, 0x8d, 0xe4, 0xbd, 0x9c, 0xe7, 0xb1, 0xbb, 0xe5, 0x9e, 0x8b,
	0x22, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x53, 0x0a, 0x0b, 0x42, 0x61, 0x73, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x04, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x65,
	0x4e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x4b, 0x0a, 0x0b,
	0x42, 0x61, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x12, 0x26, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x50, 0x0a, 0x07, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x70, 0x12, 0x1e, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x06, 0x75, 0x65, 0x72, 0x45, 0x78, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x45, 0x78, 0x74, 0x52, 0x06, 0x75, 0x65, 0x72, 0x45, 0x78, 0x74, 0x22, 0x1b, 0x0a, 0x09, 0x46,
	0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x32, 0xa6, 0x14, 0x0a, 0x0b, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x9e, 0x01, 0x0a, 0x0a, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0c, 0x2e, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x12, 0x12, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x92,
	0x41, 0x44, 0x0a, 0x12, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe7, 0x9b, 0xb8, 0xe5, 0x85, 0xb3,
	0xe6, 0x8e, 0xa5, 0xe5, 0x8f, 0xa3, 0x0a, 0x04, 0x75, 0x74, 0x69, 0x6c, 0x0a, 0x06, 0x76, 0x31,
	0x2e, 0x30, 0x2e, 0x30, 0x12, 0x09, 0xe9, 0xaa, 0x8c, 0xe8, 0xaf, 0x81, 0xe7, 0xa0, 0x81, 0x1a,
	0x15, 0xe9, 0xaa, 0x8c, 0xe8, 0xaf, 0x81, 0xe7, 0xa0, 0x81, 0xe7, 0x94, 0x9f, 0xe6, 0x88, 0x90,
	0xe6, 0x8e, 0xa5, 0xe5, 0x8f, 0xa3, 0xc8, 0x3e, 0x00, 0x12, 0xa1, 0x01, 0x0a, 0x0e, 0x53, 0x65,
	0x6e, 0x64, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x68, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12, 0x16, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x31, 0x2f, 0x53, 0x65, 0x6e, 0x64, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43,
	0x6f, 0x64, 0x65, 0x92, 0x41, 0x44, 0x0a, 0x12, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe7, 0x9b,
	0xb8, 0xe5, 0x85, 0xb3, 0xe6, 0x8e, 0xa5, 0xe5, 0x8f, 0xa3, 0x0a, 0x04, 0x75, 0x74, 0x69, 0x6c,
	0x0a, 0x06, 0x76, 0x31, 0x2e, 0x30, 0x2e, 0x30, 0x12, 0x0f, 0xe5, 0x8f, 0x91, 0xe9, 0x80, 0x81,
	0xe9, 0xaa, 0x8c, 0xe8, 0xaf, 0x81, 0xe7, 0xa0, 0x81, 0x1a, 0x0f, 0xe5, 0x8f, 0x91, 0xe9, 0x80,
	0x81, 0xe9, 0xaa, 0x8c, 0xe8, 0xaf, 0x81, 0xe7, 0xa0, 0x81, 0xc8, 0x3e, 0x00, 0x12, 0x9d, 0x01,
	0x0a, 0x0c, 0x53, 0x69, 0x67, 0x6e, 0x75, 0x70, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x12, 0x15,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x55, 0x70, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x68, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x22, 0x19, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x73, 0x69, 0x67, 0x6e, 0x75, 0x70,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x3a, 0x01, 0x2a, 0x92, 0x41, 0x3e, 0x0a, 0x12, 0xe7, 0x94,
	0xa8, 0xe6, 0x88, 0xb7, 0xe7, 0x9b, 0xb8, 0xe5, 0x85, 0xb3, 0xe6, 0x8e, 0xa5, 0xe5, 0x8f, 0xa3,
	0x0a, 0x06, 0x76, 0x31, 0x2e, 0x30, 0x2e, 0x30, 0x12, 0x0f, 0xe5, 0x8f, 0x91, 0xe9, 0x80, 0x81,
	0xe9, 0xaa, 0x8c, 0xe8, 0xaf, 0x81, 0xe7, 0xa0, 0x81, 0x1a, 0x0f, 0xe5, 0x8f, 0x91, 0xe9, 0x80,
	0x81, 0xe9, 0xaa, 0x8c, 0xe8, 0xaf, 0x81, 0xe7, 0xa0, 0x81, 0xc8, 0x3e, 0x01, 0x12, 0x78, 0x0a,
	0x06, 0x53, 0x69, 0x67, 0x6e, 0x75, 0x70, 0x12, 0x0f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x53,
	0x69, 0x67, 0x6e, 0x75, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x65, 0x6d, 0x70, 0x74, 0x79,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x4f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x22, 0x0c,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x3a, 0x01, 0x2a, 0x92,
	0x41, 0x32, 0x0a, 0x12, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe7, 0x9b, 0xb8, 0xe5, 0x85, 0xb3,
	0xe6, 0x8e, 0xa5, 0xe5, 0x8f, 0xa3, 0x0a, 0x06, 0x76, 0x31, 0x2e, 0x30, 0x2e, 0x30, 0x12, 0x06,
	0xe6, 0xb3, 0xa8, 0xe5, 0x86, 0x8c, 0x1a, 0x0c, 0xe6, 0xb3, 0xa8, 0xe5, 0x86, 0x8c, 0xe6, 0x8e,
	0xa5, 0xe5, 0x8f, 0xa3, 0xc8, 0x3e, 0x01, 0x12, 0x76, 0x0a, 0x0a, 0x45, 0x61, 0x73, 0x79, 0x53,
	0x69, 0x67, 0x6e, 0x75, 0x70, 0x12, 0x0f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x53, 0x69, 0x67,
	0x6e, 0x75, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x52, 0x65, 0x70, 0x22, 0x47, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x22, 0x0c,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x3a, 0x01, 0x2a, 0x92,
	0x41, 0x2a, 0x0a, 0x12, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe7, 0x9b, 0xb8, 0xe5, 0x85, 0xb3,
	0xe6, 0x8e, 0xa5, 0xe5, 0x8f, 0xa3, 0x0a, 0x06, 0x76, 0x31, 0x2e, 0x30, 0x2e, 0x30, 0x12, 0x0c,
	0xe7, 0xae, 0x80, 0xe5, 0x8d, 0x95, 0xe6, 0xb3, 0xa8, 0xe5, 0x86, 0x8c, 0xc8, 0x3e, 0x01, 0x12,
	0x8c, 0x01, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x0f, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x70, 0x22, 0x61, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x23, 0x12, 0x21, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65,
	0x72, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x7b, 0x73,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x7d, 0x92, 0x41, 0x32, 0x0a, 0x12, 0xe7, 0x94, 0xa8, 0xe6, 0x88,
	0xb7, 0xe7, 0x9b, 0xb8, 0xe5, 0x85, 0xb3, 0xe6, 0x8e, 0xa5, 0xe5, 0x8f, 0xa3, 0x0a, 0x06, 0x76,
	0x31, 0x2e, 0x30, 0x2e, 0x30, 0x12, 0x06, 0xe6, 0xbf, 0x80, 0xe6, 0xb4, 0xbb, 0x1a, 0x0c, 0xe6,
	0xbf, 0x80, 0xe6, 0xb4, 0xbb, 0xe6, 0x8e, 0xa5, 0xe5, 0x8f, 0xa3, 0xc8, 0x3e, 0x01, 0x12, 0x9a,
	0x01, 0x0a, 0x04, 0x45, 0x64, 0x69, 0x74, 0x12, 0x0d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x45,
	0x64, 0x69, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x75, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x1a, 0x11, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x3a,
	0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x92, 0x41, 0x4d, 0x0a, 0x12, 0xe7, 0x94, 0xa8,
	0xe6, 0x88, 0xb7, 0xe7, 0x9b, 0xb8, 0xe5, 0x85, 0xb3, 0xe6, 0x8e, 0xa5, 0xe5, 0x8f, 0xa3, 0x0a,
	0x06, 0x76, 0x31, 0x2e, 0x30, 0x2e, 0x30, 0x12, 0x06, 0xe7, 0xbc, 0x96, 0xe8, 0xbe, 0x91, 0x1a,
	0x0c, 0xe7, 0xbc, 0x96, 0xe8, 0xbe, 0x91, 0xe6, 0x8e, 0xa5, 0xe5, 0x8f, 0xa3, 0x62, 0x19, 0x0a,
	0x17, 0x0a, 0x0d, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x06, 0x0a, 0x04, 0x72, 0x65, 0x61, 0x64, 0xc8, 0x3e, 0x01, 0x12, 0x7e, 0x0a, 0x05, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x12, 0x0e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x52, 0x65, 0x70, 0x22, 0x55, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x22, 0x12, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x6c, 0x6f, 0x67, 0x69, 0x6e,
	0x3a, 0x01, 0x2a, 0x92, 0x41, 0x32, 0x0a, 0x12, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe7, 0x9b,
	0xb8, 0xe5, 0x85, 0xb3, 0xe6, 0x8e, 0xa5, 0xe5, 0x8f, 0xa3, 0x0a, 0x06, 0x76, 0x31, 0x2e, 0x30,
	0x2e, 0x30, 0x12, 0x06, 0xe7, 0x99, 0xbb, 0xe5, 0xbd, 0x95, 0x1a, 0x0c, 0xe7, 0x99, 0xbb, 0xe5,
	0xbd, 0x95, 0xe6, 0x8e, 0xa5, 0xe5, 0x8f, 0xa3, 0xc8, 0x3e, 0x00, 0x12, 0x79, 0x0a, 0x06, 0x4c,
	0x6f, 0x67, 0x6f, 0x75, 0x74, 0x12, 0x0c, 0x2e, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x0c, 0x2e, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x53, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x12, 0x13, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x6c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x92, 0x41,
	0x32, 0x0a, 0x12, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe7, 0x9b, 0xb8, 0xe5, 0x85, 0xb3, 0xe6,
	0x8e, 0xa5, 0xe5, 0x8f, 0xa3, 0x0a, 0x06, 0x76, 0x31, 0x2e, 0x30, 0x2e, 0x30, 0x12, 0x06, 0xe9,
	0x80, 0x80, 0xe5, 0x87, 0xba, 0x1a, 0x0c, 0xe9, 0x80, 0x80, 0xe5, 0x87, 0xba, 0xe6, 0x8e, 0xa5,
	0xe5, 0x8f, 0xa3, 0xc8, 0x3e, 0x00, 0x12, 0xc7, 0x01, 0x0a, 0x08, 0x41, 0x75, 0x74, 0x68, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x0c, 0x2e, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x12, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x75, 0x74,
	0x68, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x98, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0e, 0x12, 0x0c,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x92, 0x41, 0x7e, 0x0a,
	0x12, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe7, 0x9b, 0xb8, 0xe5, 0x85, 0xb3, 0xe6, 0x8e, 0xa5,
	0xe5, 0x8f, 0xa3, 0x0a, 0x06, 0x76, 0x31, 0x2e, 0x30, 0x2e, 0x30, 0x12, 0x12, 0xe8, 0x8e, 0xb7,
	0xe5, 0x8f, 0x96, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe4, 0xbf, 0xa1, 0xe6, 0x81, 0xaf, 0x1a,
	0x18, 0xe8, 0x8e, 0xb7, 0xe5, 0x8f, 0x96, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe4, 0xbf, 0xa1,
	0xe6, 0x81, 0xaf, 0xe6, 0x8e, 0xa5, 0xe5, 0x8f, 0xa3, 0x62, 0x32, 0x0a, 0x10, 0x0a, 0x06, 0x4f,
	0x41, 0x75, 0x74, 0x68, 0x32, 0x12, 0x06, 0x0a, 0x04, 0x72, 0x65, 0x61, 0x64, 0x0a, 0x1e, 0x0a,
	0x0d, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0d,
	0x0a, 0x04, 0x72, 0x65, 0x61, 0x64, 0x0a, 0x05, 0x77, 0x72, 0x69, 0x74, 0x65, 0xc8, 0x3e, 0x00,
	0x12, 0x9c, 0x01, 0x0a, 0x0e, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x12, 0x0e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54,
	0x69, 0x6e, 0x79, 0x52, 0x65, 0x70, 0x22, 0x67, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x12, 0x1b,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x66, 0x6f, 0x72,
	0x67, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x92, 0x41, 0x3e, 0x0a, 0x12,
	0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe7, 0x9b, 0xb8, 0xe5, 0x85, 0xb3, 0xe6, 0x8e, 0xa5, 0xe5,
	0x8f, 0xa3, 0x0a, 0x06, 0x76, 0x31, 0x2e, 0x30, 0x2e, 0x30, 0x12, 0x0c, 0xe5, 0xbf, 0x98, 0xe8,
	0xae, 0xb0, 0xe5, 0xaf, 0x86, 0xe7, 0xa0, 0x81, 0x1a, 0x12, 0xe5, 0xbf, 0x98, 0xe8, 0xae, 0xb0,
	0xe5, 0xaf, 0x86, 0xe7, 0xa0, 0x81, 0xe6, 0x8e, 0xa5, 0xe5, 0x8f, 0xa3, 0xc8, 0x3e, 0x01, 0x12,
	0xba, 0x01, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x12, 0x16, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x69, 0x6e, 0x79, 0x52, 0x65, 0x70, 0x22, 0x7e, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x34, 0x32, 0x28, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73,
	0x65, 0x72, 0x2f, 0x72, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x7b, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x7d, 0x3a, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x92, 0x41, 0x3e, 0x0a, 0x12, 0xe7, 0x94, 0xa8,
	0xe6, 0x88, 0xb7, 0xe7, 0x9b, 0xb8, 0xe5, 0x85, 0xb3, 0xe6, 0x8e, 0xa5, 0xe5, 0x8f, 0xa3, 0x0a,
	0x06, 0x76, 0x31, 0x2e, 0x30, 0x2e, 0x30, 0x12, 0x0c, 0xe9, 0x87, 0x8d, 0xe7, 0xbd, 0xae, 0xe5,
	0xaf, 0x86, 0xe7, 0xa0, 0x81, 0x1a, 0x12, 0xe9, 0x87, 0x8d, 0xe7, 0xbd, 0xae, 0xe5, 0xaf, 0x86,
	0xe7, 0xa0, 0x81, 0xe6, 0x8e, 0xa5, 0xe5, 0x8f, 0xa3, 0xc8, 0x3e, 0x01, 0x12, 0x99, 0x01, 0x0a,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0f, 0x2e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x1a, 0x0d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x70, 0x22, 0x71, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x12, 0x11, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x7b, 0x69, 0x64, 0x7d,
	0x92, 0x41, 0x52, 0x0a, 0x12, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe7, 0x9b, 0xb8, 0xe5, 0x85,
	0xb3, 0xe6, 0x8e, 0xa5, 0xe5, 0x8f, 0xa3, 0x0a, 0x06, 0x76, 0x31, 0x2e, 0x30, 0x2e, 0x30, 0x12,
	0x12, 0xe8, 0x8e, 0xb7, 0xe5, 0x8f, 0x96, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe4, 0xbf, 0xa1,
	0xe6, 0x81, 0xaf, 0x1a, 0x20, 0xe6, 0xa0, 0xb9, 0xe6, 0x8d, 0xae, 0x49, 0x64, 0xe8, 0x8e, 0xb7,
	0xe5, 0x8f, 0x96, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe4, 0xbf, 0xa1, 0xe6, 0x81, 0xaf, 0xe6,
	0x8e, 0xa5, 0xe5, 0x8f, 0xa3, 0xc8, 0x3e, 0x00, 0x12, 0xa3, 0x01, 0x0a, 0x0d, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x16, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x22, 0x62, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x18, 0x12, 0x16, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72,
	0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x92, 0x41, 0x3e, 0x0a, 0x12, 0xe7,
	0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe7, 0x9b, 0xb8, 0xe5, 0x85, 0xb3, 0xe6, 0x8e, 0xa5, 0xe5, 0x8f,
	0xa3, 0x0a, 0x06, 0x76, 0x31, 0x2e, 0x30, 0x2e, 0x30, 0x12, 0x0c, 0xe6, 0x93, 0x8d, 0xe4, 0xbd,
	0x9c, 0xe6, 0x97, 0xa5, 0xe5, 0xbf, 0x97, 0x1a, 0x12, 0xe6, 0x93, 0x8d, 0xe4, 0xbd, 0x9c, 0xe6,
	0x97, 0xa5, 0xe5, 0xbf, 0x97, 0xe6, 0x8e, 0xa5, 0xe5, 0x8f, 0xa3, 0xc8, 0x3e, 0x00, 0x12, 0xa9,
	0x01, 0x0a, 0x08, 0x42, 0x61, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x11, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x11,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x70, 0x22, 0x77, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x22, 0x14, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x3a,
	0x01, 0x2a, 0x92, 0x41, 0x52, 0x0a, 0x12, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe7, 0x9b, 0xb8,
	0xe5, 0x85, 0xb3, 0xe6, 0x8e, 0xa5, 0xe5, 0x8f, 0xa3, 0x0a, 0x06, 0x76, 0x31, 0x2e, 0x30, 0x2e,
	0x30, 0x12, 0x12, 0xe8, 0x8e, 0xb7, 0xe5, 0x8f, 0x96, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe4,
	0xbf, 0xa1, 0xe6, 0x81, 0xaf, 0x1a, 0x20, 0xe6, 0xa0, 0xb9, 0xe6, 0x8d, 0xae, 0x49, 0x64, 0xe8,
	0x8e, 0xb7, 0xe5, 0x8f, 0x96, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe4, 0xbf, 0xa1, 0xe6, 0x81,
	0xaf, 0xe6, 0x8e, 0xa5, 0xe5, 0x8f, 0xa3, 0xc8, 0x3e, 0x00, 0x12, 0x6e, 0x0a, 0x06, 0x46, 0x6f,
	0x6c, 0x6c, 0x6f, 0x77, 0x12, 0x0f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x46, 0x6f, 0x6c, 0x6c,
	0x6f, 0x77, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x45, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x12, 0x13, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x92, 0x41, 0x24, 0x0a, 0x12, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe7, 0x9b, 0xb8, 0xe5, 0x85,
	0xb3, 0xe6, 0x8e, 0xa5, 0xe5, 0x8f, 0xa3, 0x0a, 0x06, 0x76, 0x31, 0x2e, 0x30, 0x2e, 0x30, 0x12,
	0x06, 0xe5, 0x85, 0xb3, 0xe6, 0xb3, 0xa8, 0xc8, 0x3e, 0x01, 0x12, 0x7c, 0x0a, 0x09, 0x64, 0x65,
	0x6c, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x12, 0x0f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x46,
	0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x42, 0x61, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x22, 0x4b, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x15, 0x2a, 0x13, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65,
	0x72, 0x2f, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x92, 0x41, 0x2a, 0x0a, 0x12, 0xe7, 0x94, 0xa8,
	0xe6, 0x88, 0xb7, 0xe7, 0x9b, 0xb8, 0xe5, 0x85, 0xb3, 0xe6, 0x8e, 0xa5, 0xe5, 0x8f, 0xa3, 0x0a,
	0x06, 0x76, 0x31, 0x2e, 0x30, 0x2e, 0x30, 0x12, 0x0c, 0xe5, 0x8f, 0x96, 0xe6, 0xb6, 0x88, 0xe5,
	0x85, 0xb3, 0xe6, 0xb3, 0xa8, 0xc8, 0x3e, 0x01, 0x1a, 0x17, 0x92, 0x41, 0x14, 0x12, 0x12, 0xe7,
	0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe7, 0x9b, 0xb8, 0xe5, 0x85, 0xb3, 0xe6, 0x8e, 0xa5, 0xe5, 0x8f,
	0xa3, 0x32, 0xda, 0x02, 0x0a, 0x0c, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x96, 0x01, 0x0a, 0x0e, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x41, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x7a, 0x65, 0x12, 0x0f, 0x2e, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x4f, 0x61,
	0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5b,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x12, 0x10, 0x2f, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x61,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x92, 0x41, 0x3d, 0x0a, 0x12, 0xe7, 0x94, 0xa8,
	0xe6, 0x88, 0xb7, 0xe7, 0x9b, 0xb8, 0xe5, 0x85, 0xb3, 0xe6, 0x8e, 0xa5, 0xe5, 0x8f, 0xa3, 0x0a,
	0x06, 0x76, 0x31, 0x2e, 0x30, 0x2e, 0x30, 0x0a, 0x05, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x12, 0x0b,
	0x6f, 0x61, 0x75, 0x74, 0x68, 0xe9, 0xaa, 0x8c, 0xe8, 0xaf, 0x81, 0x1a, 0x0b, 0x6f, 0x61, 0x75,
	0x74, 0x68, 0xe9, 0xaa, 0x8c, 0xe8, 0xaf, 0x81, 0xc8, 0x3e, 0x00, 0x12, 0x98, 0x01, 0x0a, 0x0a,
	0x4f, 0x61, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x0f, 0x2e, 0x6f, 0x61, 0x75,
	0x74, 0x68, 0x2e, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x61, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x22, 0x13, 0x2f, 0x6f, 0x61,
	0x75, 0x74, 0x68, 0x2f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x3a, 0x01, 0x2a, 0x92, 0x41, 0x3d, 0x0a, 0x12, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe7, 0x9b,
	0xb8, 0xe5, 0x85, 0xb3, 0xe6, 0x8e, 0xa5, 0xe5, 0x8f, 0xa3, 0x0a, 0x06, 0x76, 0x31, 0x2e, 0x30,
	0x2e, 0x30, 0x0a, 0x05, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x12, 0x0b, 0xe7, 0xad, 0xbe, 0xe5, 0x8f,
	0x91, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x1a, 0x0b, 0xe7, 0xad, 0xbe, 0xe5, 0x8f, 0x91, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0xc8, 0x3e, 0x00, 0x1a, 0x16, 0x92, 0x41, 0x13, 0x12, 0x11, 0x4f, 0x61, 0x75,
	0x74, 0x68, 0xe7, 0x9b, 0xb8, 0xe5, 0x85, 0xb3, 0xe6, 0x8e, 0xa5, 0xe5, 0x8f, 0xa3, 0x42, 0x4b,
	0x0a, 0x17, 0x78, 0x79, 0x7a, 0x2e, 0x68, 0x6f, 0x70, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5a, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x69, 0x6f, 0x76, 0x2f, 0x68, 0x6f, 0x70, 0x65, 0x72,
	0x2f, 0x76, 0x32, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x75, 0x73, 0x65,
	0x72, 0x92, 0x41, 0x07, 0x12, 0x05, 0x32, 0x03, 0x31, 0x2e, 0x30, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_user_user_service_proto_rawDescOnce sync.Once
	file_user_user_service_proto_rawDescData = file_user_user_service_proto_rawDesc
)

func file_user_user_service_proto_rawDescGZIP() []byte {
	file_user_user_service_proto_rawDescOnce.Do(func() {
		file_user_user_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_user_user_service_proto_rawDescData)
	})
	return file_user_user_service_proto_rawDescData
}

var file_user_user_service_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_user_user_service_proto_goTypes = []interface{}{
	(*SingUpVerifyReq)(nil),       // 0: user.SingUpVerifyReq
	(*SignupReq)(nil),             // 1: user.SignupReq
	(*ActiveReq)(nil),             // 2: user.ActiveReq
	(*EditReq)(nil),               // 3: user.EditReq
	(*LoginReq)(nil),              // 4: user.LoginReq
	(*LoginRep)(nil),              // 5: user.LoginRep
	(*ResetPasswordReq)(nil),      // 6: user.ResetPasswordReq
	(*ActionLogListReq)(nil),      // 7: user.ActionLogListReq
	(*ActionLogListRep)(nil),      // 8: user.ActionLogListRep
	(*SendVerifyCodeReq)(nil),     // 9: user.SendVerifyCodeReq
	(*BaseListReq)(nil),           // 10: user.BaseListReq
	(*BaseListRep)(nil),           // 11: user.BaseListRep
	(*UserRep)(nil),               // 12: user.UserRep
	(*FollowReq)(nil),             // 13: user.FollowReq
	(*EditReq_EditDetails)(nil),   // 14: user.EditReq.EditDetails
	(Gender)(0),                   // 15: user.Gender
	(*UserBaseInfo)(nil),          // 16: user.UserBaseInfo
	(*UserActionLog)(nil),         // 17: user.UserActionLog
	(Action)(0),                   // 18: user.Action
	(*User)(nil),                  // 19: user.User
	(*UserExt)(nil),               // 20: user.UserExt
	(*Resume)(nil),                // 21: user.Resume
	(*empty.Empty)(nil),           // 22: empty.Empty
	(*request.Object)(nil),        // 23: request.Object
	(*oauth.OauthReq)(nil),        // 24: oauth.OauthReq
	(*wrappers.StringValue)(nil),  // 25: google.protobuf.StringValue
	(*UserAuthInfo)(nil),          // 26: user.UserAuthInfo
	(*response.TinyRep)(nil),      // 27: response.TinyRep
	(*response.HttpResponse)(nil), // 28: response.HttpResponse
}
var file_user_user_service_proto_depIdxs = []int32{
	15, // 0: user.SignupReq.gender:type_name -> user.Gender
	14, // 1: user.EditReq.details:type_name -> user.EditReq.EditDetails
	16, // 2: user.LoginRep.user:type_name -> user.UserBaseInfo
	17, // 3: user.ActionLogListRep.list:type_name -> user.UserActionLog
	18, // 4: user.SendVerifyCodeReq.type:type_name -> user.Action
	16, // 5: user.BaseListRep.list:type_name -> user.UserBaseInfo
	19, // 6: user.UserRep.user:type_name -> user.User
	20, // 7: user.UserRep.uerExt:type_name -> user.UserExt
	15, // 8: user.EditReq.EditDetails.gender:type_name -> user.Gender
	21, // 9: user.EditReq.EditDetails.eduExps:type_name -> user.Resume
	21, // 10: user.EditReq.EditDetails.workExps:type_name -> user.Resume
	22, // 11: user.UserService.VerifyCode:input_type -> empty.Empty
	9,  // 12: user.UserService.SendVerifyCode:input_type -> user.SendVerifyCodeReq
	0,  // 13: user.UserService.SignupVerify:input_type -> user.SingUpVerifyReq
	1,  // 14: user.UserService.Signup:input_type -> user.SignupReq
	1,  // 15: user.UserService.EasySignup:input_type -> user.SignupReq
	2,  // 16: user.UserService.Active:input_type -> user.ActiveReq
	3,  // 17: user.UserService.Edit:input_type -> user.EditReq
	4,  // 18: user.UserService.Login:input_type -> user.LoginReq
	22, // 19: user.UserService.Logout:input_type -> empty.Empty
	22, // 20: user.UserService.AuthInfo:input_type -> empty.Empty
	4,  // 21: user.UserService.ForgetPassword:input_type -> user.LoginReq
	6,  // 22: user.UserService.ResetPassword:input_type -> user.ResetPasswordReq
	23, // 23: user.UserService.Info:input_type -> request.Object
	7,  // 24: user.UserService.ActionLogList:input_type -> user.ActionLogListReq
	10, // 25: user.UserService.BaseList:input_type -> user.BaseListReq
	13, // 26: user.UserService.Follow:input_type -> user.FollowReq
	13, // 27: user.UserService.delFollow:input_type -> user.FollowReq
	24, // 28: user.OauthService.OauthAuthorize:input_type -> oauth.OauthReq
	24, // 29: user.OauthService.OauthToken:input_type -> oauth.OauthReq
	25, // 30: user.UserService.VerifyCode:output_type -> google.protobuf.StringValue
	22, // 31: user.UserService.SendVerifyCode:output_type -> empty.Empty
	22, // 32: user.UserService.SignupVerify:output_type -> empty.Empty
	22, // 33: user.UserService.Signup:output_type -> empty.Empty
	5,  // 34: user.UserService.EasySignup:output_type -> user.LoginRep
	5,  // 35: user.UserService.Active:output_type -> user.LoginRep
	22, // 36: user.UserService.Edit:output_type -> empty.Empty
	5,  // 37: user.UserService.Login:output_type -> user.LoginRep
	22, // 38: user.UserService.Logout:output_type -> empty.Empty
	26, // 39: user.UserService.AuthInfo:output_type -> user.UserAuthInfo
	27, // 40: user.UserService.ForgetPassword:output_type -> response.TinyRep
	27, // 41: user.UserService.ResetPassword:output_type -> response.TinyRep
	12, // 42: user.UserService.Info:output_type -> user.UserRep
	8,  // 43: user.UserService.ActionLogList:output_type -> user.ActionLogListRep
	11, // 44: user.UserService.BaseList:output_type -> user.BaseListRep
	22, // 45: user.UserService.Follow:output_type -> empty.Empty
	11, // 46: user.UserService.delFollow:output_type -> user.BaseListRep
	28, // 47: user.OauthService.OauthAuthorize:output_type -> response.HttpResponse
	28, // 48: user.OauthService.OauthToken:output_type -> response.HttpResponse
	30, // [30:49] is the sub-list for method output_type
	11, // [11:30] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_user_user_service_proto_init() }
func file_user_user_service_proto_init() {
	if File_user_user_service_proto != nil {
		return
	}
	file_user_user_model_proto_init()
	file_user_user_enum_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_user_user_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SingUpVerifyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_user_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignupReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_user_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActiveReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_user_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_user_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_user_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_user_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetPasswordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_user_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionLogListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_user_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionLogListRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_user_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendVerifyCodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_user_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_user_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseListRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_user_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_user_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FollowReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_user_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditReq_EditDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_user_user_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_user_user_service_proto_goTypes,
		DependencyIndexes: file_user_user_service_proto_depIdxs,
		MessageInfos:      file_user_user_service_proto_msgTypes,
	}.Build()
	File_user_user_service_proto = out.File
	file_user_user_service_proto_rawDesc = nil
	file_user_user_service_proto_goTypes = nil
	file_user_user_service_proto_depIdxs = nil
}
