// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.13.0
// source: user/user.enum.proto

package user

import (
	_ "github.com/liov/tiga/protobuf/utils/proto/gogo"
	_ "github.com/liov/tiga/protobuf/utils/proto/patch"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 用户操作
type Action int32

const (
	ActionPlaceholder  Action = 0
	ActionSignup       Action = 1
	ActionActive       Action = 2
	ActionRestPassword Action = 3
	ActionEditPassword Action = 4
	ActionCreateResume Action = 5
	ActionEditResume   Action = 6
	ActionDELETEResume Action = 7
)

// Enum value maps for Action.
var (
	Action_name = map[int32]string{
		0: "ActionPlaceholder",
		1: "ActionSignup",
		2: "ActionActive",
		3: "ActionRestPassword",
		4: "ActionEditPassword",
		5: "ActionCreateResume",
		6: "ActionEditResume",
		7: "ActionDELETEResume",
	}
	Action_value = map[string]int32{
		"ActionPlaceholder":  0,
		"ActionSignup":       1,
		"ActionActive":       2,
		"ActionRestPassword": 3,
		"ActionEditPassword": 4,
		"ActionCreateResume": 5,
		"ActionEditResume":   6,
		"ActionDELETEResume": 7,
	}
)

func (x Action) Enum() *Action {
	p := new(Action)
	*p = x
	return p
}

func (x Action) OrigString() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Action) Descriptor() protoreflect.EnumDescriptor {
	return file_user_user_enum_proto_enumTypes[0].Descriptor()
}

func (Action) Type() protoreflect.EnumType {
	return &file_user_user_enum_proto_enumTypes[0]
}

func (x Action) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Action.Descriptor instead.
func (Action) EnumDescriptor() ([]byte, []int) {
	return file_user_user_enum_proto_rawDescGZIP(), []int{0}
}

// 用户角色
type Role int32

const (
	PlaceholderRole Role = 0
	RoleNormal      Role = 1
	RoleAdmin       Role = 2
	RoleSuperAdmin  Role = 3
)

// Enum value maps for Role.
var (
	Role_name = map[int32]string{
		0: "PlaceholderRole",
		1: "RoleNormal",
		2: "RoleAdmin",
		3: "RoleSuperAdmin",
	}
	Role_value = map[string]int32{
		"PlaceholderRole": 0,
		"RoleNormal":      1,
		"RoleAdmin":       2,
		"RoleSuperAdmin":  3,
	}
)

func (x Role) Enum() *Role {
	p := new(Role)
	*p = x
	return p
}

func (x Role) OrigString() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Role) Descriptor() protoreflect.EnumDescriptor {
	return file_user_user_enum_proto_enumTypes[1].Descriptor()
}

func (Role) Type() protoreflect.EnumType {
	return &file_user_user_enum_proto_enumTypes[1]
}

func (x Role) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Role.Descriptor instead.
func (Role) EnumDescriptor() ([]byte, []int) {
	return file_user_user_enum_proto_rawDescGZIP(), []int{1}
}

// 用户性别
type Gender int32

const (
	GenderPlaceholder Gender = 0
	GenderUnfilled    Gender = 1
	GenderMale        Gender = 2
	GenderFemale      Gender = 3
)

// Enum value maps for Gender.
var (
	Gender_name = map[int32]string{
		0: "GenderPlaceholder",
		1: "GenderUnfilled",
		2: "GenderMale",
		3: "GenderFemale",
	}
	Gender_value = map[string]int32{
		"GenderPlaceholder": 0,
		"GenderUnfilled":    1,
		"GenderMale":        2,
		"GenderFemale":      3,
	}
)

func (x Gender) Enum() *Gender {
	p := new(Gender)
	*p = x
	return p
}

func (x Gender) OrigString() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Gender) Descriptor() protoreflect.EnumDescriptor {
	return file_user_user_enum_proto_enumTypes[2].Descriptor()
}

func (Gender) Type() protoreflect.EnumType {
	return &file_user_user_enum_proto_enumTypes[2]
}

func (x Gender) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Gender.Descriptor instead.
func (Gender) EnumDescriptor() ([]byte, []int) {
	return file_user_user_enum_proto_rawDescGZIP(), []int{2}
}

// 用户角色
type UserStatus int32

const (
	UserStatusPlaceholder UserStatus = 0
	UserStatusInActive    UserStatus = 1
	UserStatusActivated   UserStatus = 2
	UserStatusFrozen      UserStatus = 3
	UserStatusDeleted     UserStatus = 4
)

// Enum value maps for UserStatus.
var (
	UserStatus_name = map[int32]string{
		0: "UserStatusPlaceholder",
		1: "UserStatusInActive",
		2: "UserStatusActivated",
		3: "UserStatusFrozen",
		4: "UserStatusDeleted",
	}
	UserStatus_value = map[string]int32{
		"UserStatusPlaceholder": 0,
		"UserStatusInActive":    1,
		"UserStatusActivated":   2,
		"UserStatusFrozen":      3,
		"UserStatusDeleted":     4,
	}
)

func (x UserStatus) Enum() *UserStatus {
	p := new(UserStatus)
	*p = x
	return p
}

func (x UserStatus) OrigString() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_user_user_enum_proto_enumTypes[3].Descriptor()
}

func (UserStatus) Type() protoreflect.EnumType {
	return &file_user_user_enum_proto_enumTypes[3]
}

func (x UserStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserStatus.Descriptor instead.
func (UserStatus) EnumDescriptor() ([]byte, []int) {
	return file_user_user_enum_proto_rawDescGZIP(), []int{3}
}

// 封禁类型
type BannedType int32

const (
	BannedTypePlaceholder BannedType = 0
	BannedTypePost        BannedType = 1
	BannedTypeLogin       BannedType = 2
)

// Enum value maps for BannedType.
var (
	BannedType_name = map[int32]string{
		0: "BannedTypePlaceholder",
		1: "BannedTypePost",
		2: "BannedTypeLogin",
	}
	BannedType_value = map[string]int32{
		"BannedTypePlaceholder": 0,
		"BannedTypePost":        1,
		"BannedTypeLogin":       2,
	}
)

func (x BannedType) Enum() *BannedType {
	p := new(BannedType)
	*p = x
	return p
}

func (x BannedType) OrigString() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BannedType) Descriptor() protoreflect.EnumDescriptor {
	return file_user_user_enum_proto_enumTypes[4].Descriptor()
}

func (BannedType) Type() protoreflect.EnumType {
	return &file_user_user_enum_proto_enumTypes[4]
}

func (x BannedType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BannedType.Descriptor instead.
func (BannedType) EnumDescriptor() ([]byte, []int) {
	return file_user_user_enum_proto_rawDescGZIP(), []int{4}
}

type UserErr int32

const (
	UserErrPlaceholder  UserErr = 0
	UserErrLogin        UserErr = 1000
	UserErrNoActive     UserErr = 1001
	UserErrNoAuthority  UserErr = 1002
	UserErrLoginTimeout UserErr = 1003
	UserErrInvalidToken UserErr = 1004
	UserErrNoLogin      UserErr = 1005
)

// Enum value maps for UserErr.
var (
	UserErr_name = map[int32]string{
		0:    "UserErrPlaceholder",
		1000: "UserErrLogin",
		1001: "UserErrNoActive",
		1002: "UserErrNoAuthority",
		1003: "UserErrLoginTimeout",
		1004: "UserErrInvalidToken",
		1005: "UserErrNoLogin",
	}
	UserErr_value = map[string]int32{
		"UserErrPlaceholder":  0,
		"UserErrLogin":        1000,
		"UserErrNoActive":     1001,
		"UserErrNoAuthority":  1002,
		"UserErrLoginTimeout": 1003,
		"UserErrInvalidToken": 1004,
		"UserErrNoLogin":      1005,
	}
)

func (x UserErr) Enum() *UserErr {
	p := new(UserErr)
	*p = x
	return p
}

func (x UserErr) OrigString() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserErr) Descriptor() protoreflect.EnumDescriptor {
	return file_user_user_enum_proto_enumTypes[5].Descriptor()
}

func (UserErr) Type() protoreflect.EnumType {
	return &file_user_user_enum_proto_enumTypes[5]
}

func (x UserErr) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserErr.Descriptor instead.
func (UserErr) EnumDescriptor() ([]byte, []int) {
	return file_user_user_enum_proto_rawDescGZIP(), []int{5}
}

var File_user_user_enum_proto protoreflect.FileDescriptor

var file_user_user_enum_proto_rawDesc = []byte{
	0x0a, 0x14, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x65, 0x6e, 0x75, 0x6d,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x75, 0x73, 0x65, 0x72, 0x1a, 0x1b, 0x75, 0x74,
	0x69, 0x6c, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2f, 0x65,
	0x6e, 0x75, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0e, 0x70, 0x61, 0x74, 0x63, 0x68,
	0x2f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2a, 0xca, 0x02, 0x0a, 0x06, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x11, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c,
	0x61, 0x63, 0x65, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x10, 0x00, 0x1a, 0x0a, 0x92, 0x9d, 0x20,
	0x06, 0xe5, 0x8d, 0xa0, 0xe4, 0xbd, 0x8d, 0x12, 0x1c, 0x0a, 0x0c, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x69, 0x67, 0x6e, 0x75, 0x70, 0x10, 0x01, 0x1a, 0x0a, 0x92, 0x9d, 0x20, 0x06, 0xe6,
	0xb3, 0xa8, 0xe5, 0x86, 0x8c, 0x12, 0x1c, 0x0a, 0x0c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x10, 0x02, 0x1a, 0x0a, 0x92, 0x9d, 0x20, 0x06, 0xe6, 0xbf, 0x80,
	0xe6, 0xb4, 0xbb, 0x12, 0x28, 0x0a, 0x12, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x10, 0x03, 0x1a, 0x10, 0x92, 0x9d, 0x20,
	0x0c, 0xe9, 0x87, 0x8d, 0xe7, 0xbd, 0xae, 0xe5, 0xaf, 0x86, 0xe7, 0xa0, 0x81, 0x12, 0x28, 0x0a,
	0x12, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x64, 0x69, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x10, 0x04, 0x1a, 0x10, 0x92, 0x9d, 0x20, 0x0c, 0xe4, 0xbf, 0xae, 0xe6, 0x94,
	0xb9, 0xe5, 0xaf, 0x86, 0xe7, 0xa0, 0x81, 0x12, 0x28, 0x0a, 0x12, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x10, 0x05, 0x1a,
	0x10, 0x92, 0x9d, 0x20, 0x0c, 0xe6, 0x96, 0xb0, 0xe5, 0xbb, 0xba, 0xe7, 0xae, 0x80, 0xe5, 0x8e,
	0x86, 0x12, 0x26, 0x0a, 0x10, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x64, 0x69, 0x74, 0x52,
	0x65, 0x73, 0x75, 0x6d, 0x65, 0x10, 0x06, 0x1a, 0x10, 0x92, 0x9d, 0x20, 0x0c, 0xe7, 0xbc, 0x96,
	0xe8, 0xbe, 0x91, 0xe7, 0xae, 0x80, 0xe5, 0x8e, 0x86, 0x12, 0x28, 0x0a, 0x12, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x10,
	0x07, 0x1a, 0x10, 0x92, 0x9d, 0x20, 0x0c, 0xe5, 0x88, 0xa0, 0xe9, 0x99, 0xa4, 0xe7, 0xae, 0x80,
	0xe5, 0x8e, 0x86, 0x1a, 0x11, 0xd2, 0xb5, 0x03, 0x0d, 0xf2, 0x01, 0x0a, 0x4f, 0x72, 0x69, 0x67,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x2a, 0xa3, 0x01, 0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x12,
	0x1f, 0x0a, 0x0f, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x6f,
	0x6c, 0x65, 0x10, 0x00, 0x1a, 0x0a, 0x92, 0x9d, 0x20, 0x06, 0xe5, 0x8d, 0xa0, 0xe4, 0xbd, 0x8d,
	0x12, 0x20, 0x0a, 0x0a, 0x52, 0x6f, 0x6c, 0x65, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x10, 0x01,
	0x1a, 0x10, 0x92, 0x9d, 0x20, 0x0c, 0xe6, 0x99, 0xae, 0xe9, 0x80, 0x9a, 0xe7, 0x94, 0xa8, 0xe6,
	0x88, 0xb7, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x10,
	0x02, 0x1a, 0x0d, 0x92, 0x9d, 0x20, 0x09, 0xe7, 0xae, 0xa1, 0xe7, 0x90, 0x86, 0xe5, 0x91, 0x98,
	0x12, 0x27, 0x0a, 0x0e, 0x52, 0x6f, 0x6c, 0x65, 0x53, 0x75, 0x70, 0x65, 0x72, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x10, 0x03, 0x1a, 0x13, 0x92, 0x9d, 0x20, 0x0f, 0xe8, 0xb6, 0x85, 0xe7, 0xba, 0xa7,
	0xe7, 0xae, 0xa1, 0xe7, 0x90, 0x86, 0xe5, 0x91, 0x98, 0x1a, 0x11, 0xd2, 0xb5, 0x03, 0x0d, 0xf2,
	0x01, 0x0a, 0x4f, 0x72, 0x69, 0x67, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x2a, 0x92, 0x01, 0x0a,
	0x06, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x11, 0x47, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x10, 0x00, 0x1a, 0x0a,
	0x92, 0x9d, 0x20, 0x06, 0xe5, 0x8d, 0xa0, 0xe4, 0xbd, 0x8d, 0x12, 0x1e, 0x0a, 0x0e, 0x47, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x55, 0x6e, 0x66, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x10, 0x01, 0x1a, 0x0a,
	0x92, 0x9d, 0x20, 0x06, 0xe6, 0x9c, 0xaa, 0xe5, 0xa1, 0xab, 0x12, 0x17, 0x0a, 0x0a, 0x47, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x4d, 0x61, 0x6c, 0x65, 0x10, 0x02, 0x1a, 0x07, 0x92, 0x9d, 0x20, 0x03,
	0xe7, 0x94, 0xb7, 0x12, 0x19, 0x0a, 0x0c, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x46, 0x65, 0x6d,
	0x61, 0x6c, 0x65, 0x10, 0x03, 0x1a, 0x07, 0x92, 0x9d, 0x20, 0x03, 0xe5, 0xa5, 0xb3, 0x1a, 0x11,
	0xd2, 0xb5, 0x03, 0x0d, 0xf2, 0x01, 0x0a, 0x4f, 0x72, 0x69, 0x67, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x2a, 0xe4, 0x01, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x25, 0x0a, 0x15, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x50, 0x6c,
	0x61, 0x63, 0x65, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x10, 0x00, 0x1a, 0x0a, 0x92, 0x9d, 0x20,
	0x06, 0xe5, 0x8d, 0xa0, 0xe4, 0xbd, 0x8d, 0x12, 0x25, 0x0a, 0x12, 0x55, 0x73, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x10, 0x01, 0x1a,
	0x0d, 0x92, 0x9d, 0x20, 0x09, 0xe6, 0x9c, 0xaa, 0xe6, 0xbf, 0x80, 0xe6, 0xb4, 0xbb, 0x12, 0x26,
	0x0a, 0x13, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x64, 0x10, 0x02, 0x1a, 0x0d, 0x92, 0x9d, 0x20, 0x09, 0xe5, 0xb7, 0xb2,
	0xe6, 0xbf, 0x80, 0xe6, 0xb4, 0xbb, 0x12, 0x23, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x46, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x10, 0x03, 0x1a, 0x0d, 0x92, 0x9d,
	0x20, 0x09, 0xe5, 0xb7, 0xb2, 0xe5, 0x86, 0xbb, 0xe7, 0xbb, 0x93, 0x12, 0x24, 0x0a, 0x11, 0x55,
	0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x10, 0x04, 0x1a, 0x0d, 0x92, 0x9d, 0x20, 0x09, 0xe5, 0xb7, 0xb2, 0xe6, 0xb3, 0xa8, 0xe9, 0x94,
	0x80, 0x1a, 0x15, 0xd2, 0xb5, 0x03, 0x0d, 0xf2, 0x01, 0x0a, 0x4f, 0x72, 0x69, 0x67, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0xe0, 0xa4, 0x1e, 0x00, 0x2a, 0x91, 0x01, 0x0a, 0x0a, 0x42, 0x61, 0x6e,
	0x6e, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x15, 0x42, 0x61, 0x6e, 0x6e, 0x65,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72,
	0x10, 0x00, 0x1a, 0x0a, 0x92, 0x9d, 0x20, 0x06, 0xe5, 0x8d, 0xa0, 0xe4, 0xbd, 0x8d, 0x12, 0x1e,
	0x0a, 0x0e, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x50, 0x6f, 0x73, 0x74,
	0x10, 0x01, 0x1a, 0x0a, 0x92, 0x9d, 0x20, 0x06, 0xe7, 0xa6, 0x81, 0xe8, 0xa8, 0x80, 0x12, 0x25,
	0x0a, 0x0f, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x10, 0x02, 0x1a, 0x10, 0x92, 0x9d, 0x20, 0x0c, 0xe7, 0xa6, 0x81, 0xe6, 0xad, 0xa2, 0xe7,
	0x99, 0xbb, 0xe5, 0xbd, 0x95, 0x1a, 0x15, 0xd2, 0xb5, 0x03, 0x0d, 0xf2, 0x01, 0x0a, 0x4f, 0x72,
	0x69, 0x67, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0xe0, 0xa4, 0x1e, 0x00, 0x2a, 0xc7, 0x02, 0x0a,
	0x07, 0x55, 0x73, 0x65, 0x72, 0x45, 0x72, 0x72, 0x12, 0x22, 0x0a, 0x12, 0x55, 0x73, 0x65, 0x72,
	0x45, 0x72, 0x72, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x10, 0x00,
	0x1a, 0x0a, 0x92, 0x9d, 0x20, 0x06, 0xe5, 0x8d, 0xa0, 0xe4, 0xbd, 0x8d, 0x12, 0x2f, 0x0a, 0x0c,
	0x55, 0x73, 0x65, 0x72, 0x45, 0x72, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x10, 0xe8, 0x07, 0x1a,
	0x1c, 0x92, 0x9d, 0x20, 0x18, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe5, 0x90, 0x8d, 0xe6, 0x88,
	0x96, 0xe5, 0xaf, 0x86, 0xe7, 0xa0, 0x81, 0xe9, 0x94, 0x99, 0xe8, 0xaf, 0xaf, 0x12, 0x29, 0x0a,
	0x0f, 0x55, 0x73, 0x65, 0x72, 0x45, 0x72, 0x72, 0x4e, 0x6f, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x10, 0xe9, 0x07, 0x1a, 0x13, 0x92, 0x9d, 0x20, 0x0f, 0xe6, 0x9c, 0xaa, 0xe6, 0xbf, 0x80, 0xe6,
	0xb4, 0xbb, 0xe8, 0xb4, 0xa6, 0xe5, 0x8f, 0xb7, 0x12, 0x26, 0x0a, 0x12, 0x55, 0x73, 0x65, 0x72,
	0x45, 0x72, 0x72, 0x4e, 0x6f, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x10, 0xea,
	0x07, 0x1a, 0x0d, 0x92, 0x9d, 0x20, 0x09, 0xe6, 0x97, 0xa0, 0xe6, 0x9d, 0x83, 0xe9, 0x99, 0x90,
	0x12, 0x2a, 0x0a, 0x13, 0x55, 0x73, 0x65, 0x72, 0x45, 0x72, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x10, 0xeb, 0x07, 0x1a, 0x10, 0x92, 0x9d, 0x20, 0x0c,
	0xe7, 0x99, 0xbb, 0xe5, 0xbd, 0x95, 0xe8, 0xb6, 0x85, 0xe6, 0x97, 0xb6, 0x12, 0x29, 0x0a, 0x13,
	0x55, 0x73, 0x65, 0x72, 0x45, 0x72, 0x72, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x10, 0xec, 0x07, 0x1a, 0x0f, 0x92, 0x9d, 0x20, 0x0b, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0xe9, 0x94, 0x99, 0xe8, 0xaf, 0xaf, 0x12, 0x22, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x45,
	0x72, 0x72, 0x4e, 0x6f, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x10, 0xed, 0x07, 0x1a, 0x0d, 0x92, 0x9d,
	0x20, 0x09, 0xe6, 0x9c, 0xaa, 0xe7, 0x99, 0xbb, 0xe5, 0xbd, 0x95, 0x1a, 0x19, 0xd2, 0xb5, 0x03,
	0x0d, 0xf2, 0x01, 0x0a, 0x4f, 0x72, 0x69, 0x67, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0xe8, 0xa4,
	0x1e, 0x01, 0xe0, 0xa4, 0x1e, 0x00, 0x42, 0x4d, 0x0a, 0x17, 0x78, 0x79, 0x7a, 0x2e, 0x68, 0x6f,
	0x70, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x5a, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x69,
	0x6f, 0x76, 0x2f, 0x68, 0x6f, 0x70, 0x65, 0x72, 0x2f, 0x76, 0x32, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x75, 0x73, 0x65, 0x72, 0xd2, 0xb5, 0x03, 0x02, 0x50, 0x01, 0xc8,
	0x3e, 0x01, 0xd0, 0x3e, 0x00, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_user_user_enum_proto_rawDescOnce sync.Once
	file_user_user_enum_proto_rawDescData = file_user_user_enum_proto_rawDesc
)

func file_user_user_enum_proto_rawDescGZIP() []byte {
	file_user_user_enum_proto_rawDescOnce.Do(func() {
		file_user_user_enum_proto_rawDescData = protoimpl.X.CompressGZIP(file_user_user_enum_proto_rawDescData)
	})
	return file_user_user_enum_proto_rawDescData
}

var file_user_user_enum_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_user_user_enum_proto_goTypes = []interface{}{
	(Action)(0),     // 0: user.Action
	(Role)(0),       // 1: user.Role
	(Gender)(0),     // 2: user.Gender
	(UserStatus)(0), // 3: user.UserStatus
	(BannedType)(0), // 4: user.BannedType
	(UserErr)(0),    // 5: user.UserErr
}
var file_user_user_enum_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_user_user_enum_proto_init() }
func file_user_user_enum_proto_init() {
	if File_user_user_enum_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_user_user_enum_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_user_user_enum_proto_goTypes,
		DependencyIndexes: file_user_user_enum_proto_depIdxs,
		EnumInfos:         file_user_user_enum_proto_enumTypes,
	}.Build()
	File_user_user_enum_proto = out.File
	file_user_user_enum_proto_rawDesc = nil
	file_user_user_enum_proto_goTypes = nil
	file_user_user_enum_proto_depIdxs = nil
}
