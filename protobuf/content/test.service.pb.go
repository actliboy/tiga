// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.13.0
// source: content/test.service.proto

package content

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	empty "github.com/liov/tiga/protobuf/utils/empty"
	_ "github.com/liov/tiga/protobuf/utils/proto/patch"
	_ "github.com/liov/tiga/protobuf/utils/response"
	_ "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GCReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address int64 `protobuf:"varint,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *GCReq) Reset() {
	*x = GCReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_content_test_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GCReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GCReq) ProtoMessage() {}

func (x *GCReq) ProtoReflect() protoreflect.Message {
	mi := &file_content_test_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GCReq.ProtoReflect.Descriptor instead.
func (*GCReq) Descriptor() ([]byte, []int) {
	return file_content_test_service_proto_rawDescGZIP(), []int{0}
}

func (x *GCReq) GetAddress() int64 {
	if x != nil {
		return x.Address
	}
	return 0
}

type ArrayReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []*ID `protobuf:"bytes,1,rep,name=Ids,proto3" json:"Ids,omitempty"`
}

func (x *ArrayReq) Reset() {
	*x = ArrayReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_content_test_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArrayReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArrayReq) ProtoMessage() {}

func (x *ArrayReq) ProtoReflect() protoreflect.Message {
	mi := &file_content_test_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArrayReq.ProtoReflect.Descriptor instead.
func (*ArrayReq) Descriptor() ([]byte, []int) {
	return file_content_test_service_proto_rawDescGZIP(), []int{1}
}

func (x *ArrayReq) GetIds() []*ID {
	if x != nil {
		return x.Ids
	}
	return nil
}

type ID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []uint64 `protobuf:"varint,1,rep,packed,name=Ids,proto3" json:"Ids,omitempty"`
}

func (x *ID) Reset() {
	*x = ID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_content_test_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ID) ProtoMessage() {}

func (x *ID) ProtoReflect() protoreflect.Message {
	mi := &file_content_test_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ID.ProtoReflect.Descriptor instead.
func (*ID) Descriptor() ([]byte, []int) {
	return file_content_test_service_proto_rawDescGZIP(), []int{2}
}

func (x *ID) GetIds() []uint64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type OneOf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Req:
	//	*OneOf_Name
	//	*OneOf_Id
	Req isOneOf_Req `protobuf_oneof:"Req"`
}

func (x *OneOf) Reset() {
	*x = OneOf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_content_test_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OneOf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OneOf) ProtoMessage() {}

func (x *OneOf) ProtoReflect() protoreflect.Message {
	mi := &file_content_test_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OneOf.ProtoReflect.Descriptor instead.
func (*OneOf) Descriptor() ([]byte, []int) {
	return file_content_test_service_proto_rawDescGZIP(), []int{3}
}

func (m *OneOf) GetReq() isOneOf_Req {
	if m != nil {
		return m.Req
	}
	return nil
}

func (x *OneOf) GetName() string {
	if x, ok := x.GetReq().(*OneOf_Name); ok {
		return x.Name
	}
	return ""
}

func (x *OneOf) GetId() uint64 {
	if x, ok := x.GetReq().(*OneOf_Id); ok {
		return x.Id
	}
	return 0
}

type isOneOf_Req interface {
	isOneOf_Req()
}

type OneOf_Name struct {
	Name string `protobuf:"bytes,1,opt,name=name,proto3,oneof"`
}

type OneOf_Id struct {
	Id uint64 `protobuf:"varint,2,opt,name=id,proto3,oneof"`
}

func (*OneOf_Name) isOneOf_Req() {}

func (*OneOf_Id) isOneOf_Req() {}

var File_content_test_service_proto protoreflect.FileDescriptor

var file_content_test_service_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x1a, 0x1b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2f, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f,
	0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d,
	0x77, 0x69, 0x74, 0x6b, 0x6f, 0x77, 0x2f, 0x67, 0x6f, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x75, 0x74, 0x69, 0x6c, 0x73, 0x2f,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1d, 0x75, 0x74, 0x69, 0x6c, 0x73, 0x2f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x0e, 0x70, 0x61, 0x74, 0x63, 0x68, 0x2f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x21, 0x0a, 0x05, 0x47, 0x43, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x22, 0x29, 0x0a, 0x08, 0x41, 0x72, 0x72, 0x61, 0x79, 0x52, 0x65, 0x71, 0x12,
	0x1d, 0x0a, 0x03, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x44, 0x52, 0x03, 0x49, 0x64, 0x73, 0x22, 0x16,
	0x0a, 0x02, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x04, 0x52, 0x03, 0x49, 0x64, 0x73, 0x22, 0x36, 0x0a, 0x05, 0x4f, 0x6e, 0x65, 0x4f, 0x66, 0x12,
	0x14, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x42, 0x05, 0x0a, 0x03, 0x52, 0x65, 0x71, 0x32, 0xf4,
	0x04, 0x0a, 0x0b, 0x54, 0x65, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xa2,
	0x01, 0x0a, 0x02, 0x47, 0x43, 0x12, 0x0e, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e,
	0x47, 0x43, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x7e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12, 0x14, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x63, 0x2f, 0x7b, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x7d, 0x92, 0x41, 0x5f, 0x0a, 0x12, 0xe6, 0xb5, 0x8b, 0xe8, 0xaf, 0x95, 0xe7, 0x9b, 0xb8, 0xe5,
	0x85, 0xb3, 0xe6, 0x8e, 0xa5, 0xe5, 0x8f, 0xa3, 0x0a, 0x06, 0x76, 0x31, 0x2e, 0x30, 0x2e, 0x30,
	0x0a, 0x04, 0x74, 0x65, 0x73, 0x74, 0x12, 0x0c, 0xe6, 0xb5, 0x8b, 0xe8, 0xaf, 0x95, 0xe6, 0x8e,
	0xa5, 0xe5, 0x8f, 0xa3, 0x1a, 0x2d, 0xe6, 0xa0, 0xb9, 0xe6, 0x8d, 0xae, 0xe5, 0x9c, 0xb0, 0xe5,
	0x9d, 0x80, 0xe5, 0x8f, 0x96, 0xe5, 0x80, 0xbc, 0xe6, 0xb5, 0x8b, 0xe8, 0xaf, 0x95, 0xe8, 0xaf,
	0xa5, 0xe5, 0x80, 0xbc, 0xe6, 0x98, 0xaf, 0xe5, 0x90, 0xa6, 0xe8, 0xa2, 0xab, 0xe5, 0x9b, 0x9e,
	0xe6, 0x94, 0xb6, 0x12, 0x8d, 0x01, 0x0a, 0x08, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x12, 0x0c, 0x2e, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x0c,
	0x2e, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x65, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x12, 0x12, 0x10, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x92, 0x41, 0x4a, 0x0a, 0x12, 0xe6, 0xb5, 0x8b, 0xe8, 0xaf,
	0x95, 0xe7, 0x9b, 0xb8, 0xe5, 0x85, 0xb3, 0xe6, 0x8e, 0xa5, 0xe5, 0x8f, 0xa3, 0x0a, 0x06, 0x76,
	0x31, 0x2e, 0x30, 0x2e, 0x30, 0x0a, 0x04, 0x74, 0x65, 0x73, 0x74, 0x12, 0x0c, 0xe6, 0x9c, 0x8d,
	0xe5, 0x8a, 0xa1, 0xe6, 0xb3, 0xa8, 0xe5, 0x86, 0x8c, 0x1a, 0x18, 0xe6, 0x9c, 0x8d, 0xe5, 0x8a,
	0xa1, 0xe6, 0xb3, 0xa8, 0xe5, 0x86, 0x8c, 0xe6, 0xb5, 0x8b, 0xe8, 0xaf, 0x95, 0xe6, 0x8e, 0xa5,
	0xe5, 0x8f, 0xa3, 0x12, 0x7f, 0x0a, 0x07, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x0c,
	0x2e, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x0c, 0x2e, 0x65,
	0x6d, 0x70, 0x74, 0x79, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x58, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x11, 0x12, 0x0f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x92, 0x41, 0x3e, 0x0a, 0x12, 0xe6, 0xb5, 0x8b, 0xe8, 0xaf, 0x95, 0xe7, 0x9b,
	0xb8, 0xe5, 0x85, 0xb3, 0xe6, 0x8e, 0xa5, 0xe5, 0x8f, 0xa3, 0x0a, 0x06, 0x76, 0x31, 0x2e, 0x30,
	0x2e, 0x30, 0x0a, 0x04, 0x74, 0x65, 0x73, 0x74, 0x12, 0x06, 0xe9, 0x87, 0x8d, 0xe5, 0x90, 0xaf,
	0x1a, 0x12, 0xe9, 0x87, 0x8d, 0xe5, 0x90, 0xaf, 0xe6, 0xb5, 0x8b, 0xe8, 0xaf, 0x95, 0xe6, 0x8e,
	0xa5, 0xe5, 0x8f, 0xa3, 0x12, 0x95, 0x01, 0x0a, 0x05, 0x41, 0x72, 0x72, 0x61, 0x79, 0x12, 0x11,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x72, 0x72, 0x61, 0x79, 0x52, 0x65,
	0x71, 0x1a, 0x0c, 0x2e, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x6b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x22, 0x0d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x2f, 0x61, 0x72, 0x72, 0x61, 0x79, 0x3a, 0x01, 0x2a, 0x92, 0x41, 0x50, 0x0a, 0x12, 0xe6, 0xb5,
	0x8b, 0xe8, 0xaf, 0x95, 0xe7, 0x9b, 0xb8, 0xe5, 0x85, 0xb3, 0xe6, 0x8e, 0xa5, 0xe5, 0x8f, 0xa3,
	0x0a, 0x06, 0x76, 0x31, 0x2e, 0x30, 0x2e, 0x30, 0x0a, 0x04, 0x74, 0x65, 0x73, 0x74, 0x12, 0x12,
	0xe6, 0x95, 0xb0, 0xe7, 0xbb, 0x84, 0xe5, 0x8f, 0x82, 0xe6, 0x95, 0xb0, 0xe6, 0xb5, 0x8b, 0xe8,
	0xaf, 0x95, 0x1a, 0x18, 0xe6, 0x95, 0xb0, 0xe7, 0xbb, 0x84, 0xe5, 0x8f, 0x82, 0xe6, 0x95, 0xb0,
	0xe6, 0xb5, 0x8b, 0xe8, 0xaf, 0x95, 0xe6, 0x8e, 0xa5, 0xe5, 0x8f, 0xa3, 0x1a, 0x17, 0x92, 0x41,
	0x14, 0x12, 0x12, 0xe6, 0xb5, 0x8b, 0xe8, 0xaf, 0x95, 0xe7, 0x9b, 0xb8, 0xe5, 0x85, 0xb3, 0xe6,
	0x8e, 0xa5, 0xe5, 0x8f, 0xa3, 0x42, 0x35, 0x5a, 0x29, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x69, 0x6f, 0x76, 0x2f, 0x68, 0x6f, 0x70, 0x65, 0x72, 0x2f, 0x76,
	0x32, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x92, 0x41, 0x07, 0x12, 0x05, 0x32, 0x03, 0x31, 0x2e, 0x30, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_content_test_service_proto_rawDescOnce sync.Once
	file_content_test_service_proto_rawDescData = file_content_test_service_proto_rawDesc
)

func file_content_test_service_proto_rawDescGZIP() []byte {
	file_content_test_service_proto_rawDescOnce.Do(func() {
		file_content_test_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_content_test_service_proto_rawDescData)
	})
	return file_content_test_service_proto_rawDescData
}

var file_content_test_service_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_content_test_service_proto_goTypes = []interface{}{
	(*GCReq)(nil),       // 0: content.GCReq
	(*ArrayReq)(nil),    // 1: content.ArrayReq
	(*ID)(nil),          // 2: content.ID
	(*OneOf)(nil),       // 3: content.OneOf
	(*empty.Empty)(nil), // 4: empty.Empty
}
var file_content_test_service_proto_depIdxs = []int32{
	2, // 0: content.ArrayReq.Ids:type_name -> content.ID
	0, // 1: content.TestService.GC:input_type -> content.GCReq
	4, // 2: content.TestService.Register:input_type -> empty.Empty
	4, // 3: content.TestService.Restart:input_type -> empty.Empty
	1, // 4: content.TestService.Array:input_type -> content.ArrayReq
	4, // 5: content.TestService.GC:output_type -> empty.Empty
	4, // 6: content.TestService.Register:output_type -> empty.Empty
	4, // 7: content.TestService.Restart:output_type -> empty.Empty
	4, // 8: content.TestService.Array:output_type -> empty.Empty
	5, // [5:9] is the sub-list for method output_type
	1, // [1:5] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_content_test_service_proto_init() }
func file_content_test_service_proto_init() {
	if File_content_test_service_proto != nil {
		return
	}
	file_content_content_model_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_content_test_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GCReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_content_test_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArrayReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_content_test_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_content_test_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OneOf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_content_test_service_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*OneOf_Name)(nil),
		(*OneOf_Id)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_content_test_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_content_test_service_proto_goTypes,
		DependencyIndexes: file_content_test_service_proto_depIdxs,
		MessageInfos:      file_content_test_service_proto_msgTypes,
	}.Build()
	File_content_test_service_proto = out.File
	file_content_test_service_proto_rawDesc = nil
	file_content_test_service_proto_goTypes = nil
	file_content_test_service_proto_depIdxs = nil
}
